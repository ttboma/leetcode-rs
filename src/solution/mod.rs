/// LeetCode solutions provided by Shieh, Yueh-chang <ttboma@gmail.com>
pub struct Solution {}

/// Each of the methods for Solution struct are placed under its own module
mod add_two_numbers;
mod all_paths_source_target;
mod all_possible_fbt;
mod average_of_levels;
mod binary_tree_paths;
mod build_tree;
mod calc_equation;
mod calculate;
mod can_complete_circuit;
mod can_construct;
mod can_finish;
mod can_jump;
mod can_place_flowers;
mod candy;
mod combination_sum;
mod combine;
mod contains_duplicate;
mod contains_nearby_duplicate;
mod convert;
mod count_bits;
mod count_max_or_subsets;
mod count_nodes;
mod count_odds;
mod count_pairs;
mod count_squares;
mod count_substrings;
mod count_vowel_strings;
mod decode_string;
mod delete_duplicates;
mod diff_ways_to_compute;
mod distribute_cookies;
mod divisor_game;
mod eval_rpn;
mod exist;
mod fib;
mod find_ball;
mod find_difference;
mod find_kth_bit;
mod find_kth_positive;
mod find_max_average;
mod find_min_arrow_shots;
mod find_order;
mod find_substring;
mod find_the_winner;
mod find_words;
mod flatten;
mod full_justify;
mod game_of_life;
mod gcd_of_strings;
mod generate;
mod generate_parenthesis;
mod get_kth;
mod get_maximum_generated;
mod get_minimum_difference;
mod get_row;
mod group_anagrams;
mod h_index;
mod has_path_sum;
mod insert;
mod int_to_roman;
mod invert_tree;
mod is_anagram;
mod is_happy;
mod is_isomorphic;
mod is_palindrome;
mod is_power_of_four;
mod is_power_of_three;
mod is_power_of_two;
mod is_same_tree;
mod is_subsequence;
mod is_symmetric;
mod is_valid_bst;
mod is_valid_sudoku;
mod jump;
mod kids_with_candies;
mod kth_grammar;
mod kth_smallest;
mod ladder_length;
mod largest_altitude;
mod length_of_last_word;
mod length_of_longest_substring;
mod letter_combinations;
mod level_order;
mod longest_common_prefix;
mod longest_consecutive;
mod longest_palindrome;
mod lowest_common_ancestor;
mod majority_element;
mod max_area;
mod max_depth;
mod max_path_sum;
mod max_profit;
mod max_sub_array;
mod max_subarray_sum_circular;
mod max_sum_after_partitioning;
mod merge;
mod merge_alternately;
mod merge_intervals;
mod merge_two_lists;
mod middle_node;
mod min_cost_climbing_stairs;
mod min_eating_speed;
mod min_mutation;
mod min_non_zero_product;
mod min_score;
mod min_sub_array_len;
mod min_window;
mod move_zeroes;
mod num_islands;
mod num_tile_possibilities;
mod partition;
mod permute;
mod pivot_index;
mod predict_the_winner;
mod product_except_self;
mod read_binary_watch;
mod remove_duplicates;
mod remove_element;
mod remove_elements;
mod remove_nodes;
mod remove_nth_from_end;
mod reorder_list;
mod reverse_between;
mod reverse_list;
mod reverse_vowels;
mod reverse_words;
mod right_side_view;
mod roman_to_int;
mod rotate;
mod rotate_image;
mod rotate_right;
mod running_sum;
mod search;
mod set_zeroes;
mod ship_within_days;
mod simplify_path;
mod snakes_and_ladders;
mod solve;
mod sort_list;
mod sorted_array_to_bst;
mod spiral_order;
mod stone_game;
mod str_str;
mod subset_xor_sum;
mod subsets;
mod sum_numbers;
mod summary_ranges;
mod swap_pairs;
mod three_sum;
mod total_fruit;
mod total_n_queens;
mod trap;
mod tribonacci;
mod two_egg_drop;
mod two_sum;
mod word_pattern;
mod zero_filled_subarray;
mod zigzag_level_order;
